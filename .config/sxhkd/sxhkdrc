#!/usr/bin/env bash

# apps
super + {Return, shift + Return, alt + Return}
	{\
		~/.config/bspwm/context-run-urxvt.sh,\
		urxvt,\
		~/.config/bspwm/colored-urxvt.sh,\
	}

ctrl + shift + v
	copyq menu

super + space ; {x, p, 7}
	/home/dbiro/Projects/All/Programming/vonal/vonal/target/release/vonalc {toggle, set_query "pass " show, set_query "= " show}

super + p ; {n, o, a, u, d, r}
	~/Projects/manage.fish {new, open, archive, unarchive, delete, run}

super + x ; { x, c, shift+v, v, shift+s, s, shift+n, n, alt+s, m, f, z, a;g, a;a}
	{\
		sh -c 'xcolor | sed -Ez "\$ s/\n+\$//" | xclip -sel clip',\
		firefox &> /dev/null,\
		code,\
		context-run urxvt "code %F",\
		subl,\
		context-run urxvt "subl %F",\
		thunar,\
		context-run urxvt "thunar %F",\
		spotify,\
		flatpak run com.mattermost.Desktop,\
		firefox "https://messenger.com",\
		firefox "https://youtube.com" &> /dev/null,\
		pw-jack guitarix,\
		pw-jack ardour6\
	}

super + n
	EDITOR=micro urxvt -e nnn

shift + Menu
	systemctl --user is-active qmenu_hud.service && \
	systemctl --user stop qmenu_hud.service || \
	systemctl --user start qmenu_hud.service

Menu
	hud

super + l; {p, l , r}
	{systemctl poweroff, systemctl hibernate, systemctl reboot}


super + c; {n, shift + n, a;a, a;j, a;s;d, a;s;l, a;s;m, w, k;u, k;h, d;d, d;a, d;o, d;l}
	{\
		urxvt -e nmtui,\
		nm-connection-editor,\
		pavucontrol,\
		pw-jack catia,\
		notify-send 'TODO' 'switch sound to dock',\
		notify-send 'TODO' 'switch sound to laptop',\
		notify-send 'TODO' 'switch sound to mixer',\
		~/.config/bspwm/toggle_rfkill.sh,\		
    	setxkbmap us,\
    	setxkbmap hu,\
    	autorandr --load horizontal,\
    	xrandr --output $(.config/bspwm/select_display.sh) --auto,\
    	xrandr --output $(.config/bspwm/select_display.sh) --off,\
    	xrandr --output $(xrandr | grep " connected" | cut -d' ' -f1) --mode 2560x1600\
	}

shift + Print
	killall ffcast || ffcast -s byzanz-record --x=%x --y=%y --width=%w --height=%h ~/Pictures/recorded_region.gif

super + Print
	if [ $(pgrep xflux) ]; then killall xflux; else xflux -l 47.0963692 -g 17.9094899; fi

Print
	flameshot gui

#super + p
#	rofi-pass


# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# xf86 backlight
# super + XF86MonBrightnessUp
# 	/usr/bin/night inc
# super + XF86MonBrightnessDown
# 	/usr/bin/night dec

# xf86

XF86MonBrightnessUp
	intelbacklight -inc 50
XF86MonBrightnessDown
	intelbacklight -dec 50

XF86Calculator
	urxvt -e sage

XF86AudioPlay
	playerctl play-pause
super + XF86AudioPlay
	playerctl position +99999
XF86AudioNext
	playerctl position 2+
XF86AudioPrev
	playerctl position 2-

XF86AudioLowerVolume
    ~/.config/bspwm/volume_control.sh down

shift + XF86AudioLowerVolume
    ~/.config/bspwm/volume_control.sh down-small

XF86AudioRaiseVolume
    ~/.config/bspwm/volume_control.sh up

shift + XF86AudioRaiseVolume
    ~/.config/bspwm/volume_control.sh up-small

super + XF86AudioLowerVolume
	/home/dbiro/.config/bspwm/cycle_sound_sinks.fish left
super + XF86AudioRaiseVolume
	/home/dbiro/.config/bspwm/cycle_sound_sinks.fish right


XF86AudioMute
	~/.config/bspwm/volume_control.sh mute

alt + XF86AudioLowerVolume
	pactl set-source-volume @DEFAULT_SOURCE@ -10%

alt + XF86AudioRaiseVolume
	pactl set-source-volume @DEFAULT_SOURCE@ +10%

alt + XF86AudioMute
	pactl set-source-mute @DEFAULT_SOURCE@ toggle; if [ $(cat /sys/class/leds/input21::scrolllock/brightness) = 1 ]; then echo 0 > /sys/class/leds/input21::scrolllock/brightness ; else echo 1 > /sys/class/leds/input21::scrolllock/brightness ; fi


#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + r
	bspc wm -r

super + alt + q
	bspc quit & systemctl --user isolate default

# close/kill
super + {_,shift + }q
	bspc node -{c,k}

# preselect
super + ctrl + {Left, Down, Up, Right}
	bspc node -p {west,south,north,east}

super + ctrl + {1-9}
	bspc node -o 0.{1-9};

super + ctrl + space
	bspc node -p cancel

# set the window state
super + {t,shift + t,s,m}
	bspc node -t {tiled,pseudo_tiled,floating,~fullscreen}

super + shift + h
	bspc node -g hidden

# focus the node in the given direction
super + {_,shift + } {Left,Down,Up,Right}
	bspc node {-f,-s} {west,south,north,east}

# focus the last node/desktop
super + Tab
	bspc desktop -f last

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}';

# rearrange
super + r
	bspc node @/ -E

# rotate
super + {_,shift +}v
	set CURRENT (xdotool getwindowfocus); bspc node -f @parent; bspc node -R {90, -90}; xdotool windowactivate $CURRENT

# rotate workspace
super + alt + {_,shift +}v
	bspc node @/ -R {90, -90}

# expand a window by moving one of its side outward
super + alt + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
